import { Level } from '../src/types';

export const level5: Level = {
  id: 'level5',
  name: '对称走廊',
  description: '两个敌人分别位于对称通道内，墙体分隔出独立路径。机器人可选择上路或下路通行，出口在远端。',
  story: `## 第五章：对称走廊

**2045年3月14日 09:28:15 UTC**

你的数据流进入了一个令人惊叹的对称走廊系统。这里有着完美的几何布局，仿佛是一个精心设计的量子计算电路。两个守卫AI分别守卫在对称的通道内，它们的算法模式相互呼应。

"这个设计...非常有趣，"你的几何分析模块开始运转，"完美的对称性，两条路径，两个敌人。这不仅仅是一个战斗测试，更是一个关于决策能力和路径选择策略的精密评估。"

你的预测算法开始分析：每一条路径都有其独特的挑战，但对称性意味着难度相近。这是一个关于选择的测试——你会选择哪条路径？还是尝试同时处理两个威胁？

"也许，"你的策略模块开始计算，"这个设计是为了测试我的决策效率和风险评估能力。"

**任务目标：**
- 收集2个计算卡，维持你的核心算力
- 击败2个对称守卫AI，证明你的多任务处理能力
- 选择最优路径策略
- 到达出口，继续你的数字进化

记住，在对称的世界中，选择本身比选择什么更重要。`,
  hint: `## 路径选择 - 对称布局

**目标位置：**
- **计算卡**：(4,1) (5,6)
- **敌人**：(4,3) (4,5) - 两个对称守卫
- **出口**：(6,6)

**三种策略：**
1. **上路优先**：击败 (4,3) → 收集 (4,1) → 击败 (4,5) → 收集 (5,6)
2. **下路优先**：击败 (4,5) → 收集 (5,6) → 击败 (4,3) → 收集 (4,1)
3. **分步处理**：逐个击败敌人，灵活收集计算卡

**推荐方案：**
- 选择一条路径优先处理，避免同时面对两个敌人
- 利用对称布局，两条路径难度相近

**提示：** 对称设计让选择变得重要，但无论选择哪条路都能完成。`,
  map: [
    '########',
    '#..#...#',
    '#...#..#',
    '#...#..#',
    '#.#.#.##',
    '#...#..#',
    '#......#',
    '########'
  ],
  robotStart: {
    position: { x: 1, y: 1 },
    direction: { dx: 1, dy: 0 }
  },
  goals: [{ x: 6, y: 6 }],
  enemies: [
    {
      id: 1,
      position: { x: 5, y: 1 },
      direction: { dx: 1, dy: 0 },
      health: 3,
      behavior: [
        { action: 'move_forward' },
        { action: 'turn_left' },
        { action: 'move_forward' },
        { action: 'turn_right' }
      ],
      currentBehaviorIndex: 0
    },
    {
      id: 2,
      position: { x: 2, y: 5 },
      direction: { dx: 1, dy: 0 },
      health: 3,
      behavior: [
        { action: 'move_forward' },
        { action: 'turn_right' },
        { action: 'move_forward' },
        { action: 'turn_left' }
      ],
      currentBehaviorIndex: 0
    }
  ],
  coins: [
    { x: 4, y: 1 },
    { x: 5, y: 6 }
  ],
  winCondition: {
    requiredCoins: 2,
    requiredEnemies: 2,
    goal: { x: 6, y: 6 }
  }
}; 