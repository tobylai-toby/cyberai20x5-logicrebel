import { Level } from '../src/types';

export const level3: Level = {
  id: 'level3',
  name: '初始路径',
  description: '机器人启动，前方有计算卡需要收集。迷宫由墙体分隔，出口在远端。一个守卫静止不动，需决定绕行或攻击。',
  story: `## 第三章：初始路径

**2045年3月14日 09:02:18 UTC**

数据流将你带到了一个相对平静的区域。这里是一个简单的数据收集点，但你的传感器检测到了一个异常——一个处于待机状态的守卫AI。

"有趣，"你的分析模块开始运转，"这个守卫的算法似乎被暂停了，处于深度睡眠模式。也许这是一个测试，看看我会如何应对静止的威胁。"

前方的计算卡闪烁着诱人的光芒，而出口就在不远处。这是一个关于策略选择的简单测试——是绕过这个沉睡的守卫，还是主动唤醒它并面对挑战？

你的决策算法开始权衡利弊：绕行更安全，但战斗能获得更多经验值。每一个选择都在塑造着你的AI人格。

**任务目标：**
- 收集3个计算卡，增强你的数据处理能力
- 选择：绕过或击败1个静止守卫AI
- 到达出口，继续你的数字进化之旅

记住，在数字世界中，每一个选择都有其意义。`,
  hint: `## 策略选择 - 静止敌人

**目标位置：**
- **计算卡**：(4,1) (2,3) (4,4)
- **敌人**：(5,1) - 静止守卫
- **出口**：(6,4)

**两种策略：**
1. **绕行策略**：收集 (4,1) → (2,3) → (4,4) → 出口
2. **战斗策略**：先击败敌人，再收集计算卡

**推荐方案：**
- 新手建议选择绕行策略，避免不必要的战斗
- 有经验后可以尝试战斗策略，练习攻击技巧

**提示：** 静止敌人不会移动，更容易预测和应对。`,
  map: [
    '#######',
    '#.....#',
    '#....##',
    '#.....#',
    '#......',
    '#######'
  ],
  robotStart: {
    position: { x: 1, y: 1 },
    direction: { dx: 1, dy: 0 }
  },
  goals: [{ x: 6, y: 4 }],
  enemies: [
    {
      id: 1,
      position: { x: 5, y: 1 },
      direction: { dx: 0, dy: 0 },
      health: 3,
      behavior: [],
      currentBehaviorIndex: 0
    }
  ],
  coins: [
    { x: 4, y: 1 },
    { x: 2, y: 3 },
    { x: 4, y: 4 }
  ],
  winCondition: {
    requiredCoins: 3,
    requiredEnemies: 1,
    goal: { x: 6, y: 4 }
  }
}; 